
package cz.cvut.fel.pjv.view;

//import com.toedter.calendar.JDateChooser;

import java.util.Calendar;
import cz.cvut.fel.pjv.chessgame.Players;
import cz.cvut.fel.pjv.start.Report;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;


public class GameForm extends javax.swing.JFrame {

    private static Logger logger = Logger.getLogger(GameForm.class.getName());

    /**
     * Creates new form GameForm
     */
    public GameForm() {
        initComponents();

        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        whitePlayerName = new javax.swing.JTextField();
        blackPlayerName = new javax.swing.JTextField();
        city = new javax.swing.JTextField();
        country = new javax.swing.JTextField();
        cupsName = new javax.swing.JTextField();
        round = new javax.swing.JTextField();
        whitePlayerLastName = new javax.swing.JTextField();
        blackPlayerLastName = new javax.swing.JTextField();
        saveGameInformation = new javax.swing.JButton();
        jgameDate = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        whitePlayerName.setText("wPN");
        whitePlayerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whitePlayerNameActionPerformed(evt);
            }
        });

        blackPlayerName.setText("bPName");
        blackPlayerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackPlayerNameActionPerformed(evt);
            }
        });

        city.setText("city");
        city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityActionPerformed(evt);
            }
        });

        country.setText("country");

        cupsName.setText("cup's name");
        cupsName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cupsNameActionPerformed(evt);
            }
        });

        round.setText("round");
        round.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundActionPerformed(evt);
            }
        });

        whitePlayerLastName.setText("wPLastN");

        blackPlayerLastName.setText("bPlayerLastN");

        saveGameInformation.setText("Save");
        saveGameInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveGameInformationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(saveGameInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jgameDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(blackPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(blackPlayerLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                                .addComponent(city)
                                .addComponent(country)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(whitePlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(whitePlayerLastName))
                                .addComponent(cupsName)
                                .addComponent(round)))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cupsName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jgameDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(round, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(whitePlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(whitePlayerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blackPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blackPlayerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveGameInformation)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void whitePlayerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whitePlayerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_whitePlayerNameActionPerformed

    private void blackPlayerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackPlayerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blackPlayerNameActionPerformed

    private void cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityActionPerformed

    private void saveGameInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveGameInformationActionPerformed

        String gameDate = new SimpleDateFormat("YYYY.MM.dd").format(jgameDate.getDate());
        String wPlayer = whitePlayerLastName.getText();
        String bPlayer = blackPlayerLastName.getText();

        File myFile = new File("src/main/resources/"
                + gameDate
                + "_"
                + wPlayer
                + bPlayer
                + ".pgn");

        try {

            PrintWriter writer = new PrintWriter(myFile);
            writer.print("");
            writer.close();
            writer = new PrintWriter(myFile);
            logger.info("Saving initial game data");
            ArrayList< StringBuilder> initialGameData = new ArrayList<>();
            StringBuilder sb = new StringBuilder();
            initialGameData.add(sb.append("[Event \"").append(cupsName.getText()).append("\"]"));
            sb = new StringBuilder();
            initialGameData.add(sb.append("[Site \"").append(city.getText()).append("\"]"));
            sb = new StringBuilder();
            initialGameData.add(sb.append("[Date \"").append(gameDate).append("\"]"));
            sb = new StringBuilder();
            initialGameData.add(sb.append("[Round \"").append(round.getText()).append("\"]"));
            sb = new StringBuilder();
            initialGameData.add(sb.append("[White \"").append(whitePlayerLastName.getText())
                    .append(", ")
                    .append(whitePlayerName.getText())
                    .append("\"]"));
            sb = new StringBuilder();
            initialGameData.add(sb.append("[Black \"").append(blackPlayerLastName.getText())
                    .append(", ")
                    .append(blackPlayerName.getText())
                    .append("\"]")
                    .append("\n"));

            sb = new StringBuilder();
            initialGameData.add(sb.append("[Result "));
            
            for (StringBuilder element : initialGameData) {
                String str = element.toString();
                writer.println(str);
            }

            writer.flush();
            writer.close();
        } catch (IOException ex) {
            logger.log(Level.SEVERE, "Error occur in printing GameReport", ex);
            ex.printStackTrace();
        }

        Players players = Players.getInstance(whitePlayerName.getText(),
                whitePlayerLastName.getText(), blackPlayerName.getText(),
                blackPlayerLastName.getText(), gameDate);

        //new GameWindowBasic();

    }//GEN-LAST:event_saveGameInformationActionPerformed

    private void roundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roundActionPerformed

    private void cupsNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cupsNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cupsNameActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GameForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField blackPlayerLastName;
    private javax.swing.JTextField blackPlayerName;
    private javax.swing.JTextField city;
    private javax.swing.JTextField country;
    private javax.swing.JTextField cupsName;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser jgameDate;
    private javax.swing.JTextField round;
    private javax.swing.JButton saveGameInformation;
    private javax.swing.JTextField whitePlayerLastName;
    private javax.swing.JTextField whitePlayerName;
    // End of variables declaration//GEN-END:variables
}
